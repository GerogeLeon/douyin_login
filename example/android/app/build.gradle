plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.postliu.douyin_example"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.postliu.douyin_example"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

//    signingConfigs {
//        debug {
//            def path = file(localProperties.getProperty("storeFile")).absolutePath
//            print("路径===>$path")
//            storeFile file(localProperties.getProperty("storeFile"))
//            storePassword = localProperties.getProperty("storePassword")
//            keyPassword = localProperties.getProperty("keyPassword")
//            keyAlias = localProperties.getProperty("keyAlias")
//        }
//        release {
//            storeFile file(localProperties.getProperty("storeFile"))
//            storePassword = localProperties.getProperty("storePassword")
//            keyPassword = localProperties.getProperty("keyPassword")
//            keyAlias = localProperties.getProperty("keyAlias")
//        }
//    }

    buildTypes {
        release {
//            signingConfig signingConfigs.debug
        }
        debug {
//            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
